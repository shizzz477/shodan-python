{"body": "<div class=\"section\" id=\"gif-creator\">\n<h1>GIF Creator<a class=\"headerlink\" href=\"#gif-creator\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Shodan keeps a full history of all the information that has been gathered on an IP address. With the API,\nyou\u2019re able to retrieve that history and we\u2019re going to use that to create a tool that outputs GIFs made of\nthe screenshots that the Shodan crawlers gather.</p>\n<p>The below code requires the following Python packages:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>arrow</li>\n<li>shodan</li>\n</ul>\n</div></blockquote>\n<p>The <strong>arrow</strong> package is used to parse the <em>timestamp</em> field of the banner into a Python <cite>datetime</cite> object.</p>\n<p>In addition to the above Python packages, you also need to have the <strong>ImageMagick</strong> software installed. If you\u2019re\nworking on Ubuntu or another distro using <strong>apt</strong> you can run the following command:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span></span>sudo apt-get install imagemagick\n</pre></div>\n</div>\n<p>This will provide us with the <strong>convert</strong> command which is needed to merge several images into an animated GIF.</p>\n<p>There are a few key Shodan methods/ parameters that make the script work:</p>\n<ol class=\"arabic simple\">\n<li><code class=\"xref py py-func docutils literal\"><span class=\"pre\">shodan.helpers.iterate_files()</span></code> to loop through the Shodan data file</li>\n<li><strong>history</strong> flag on the <code class=\"xref py py-func docutils literal\"><span class=\"pre\">shodan.Shodan.host()</span></code> method to get all the banners for an IP that Shodan has collected over the years</li>\n</ol>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># gifcreator.py</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Dependencies:</span>\n<span class=\"c1\"># - arrow</span>\n<span class=\"c1\"># - shodan</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Installation:</span>\n<span class=\"c1\"># sudo easy_install arrow shodan</span>\n<span class=\"c1\"># sudo apt-get install imagemagick</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Usage:</span>\n<span class=\"c1\"># 1. Download a json.gz file using the website or the Shodan command-line tool (https://cli.shodan.io).</span>\n<span class=\"c1\">#    For example:</span>\n<span class=\"c1\">#        shodan download screenshots.json.gz has_screenshot:true</span>\n<span class=\"c1\"># 2. Run the tool on the file:</span>\n<span class=\"c1\">#        python gifcreator.py screenshots.json.gz</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">arrow</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shodan</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shodan.helpers</span> <span class=\"kn\">as</span> <span class=\"nn\">helpers</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<span class=\"c1\"># Settings</span>\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n<span class=\"n\">MIN_SCREENS</span> <span class=\"o\">=</span> <span class=\"mi\">5</span> <span class=\"c1\"># Number of screenshots that Shodan needs to have in order to make a GIF</span>\n<span class=\"n\">MAX_SCREENS</span> <span class=\"o\">=</span> <span class=\"mi\">24</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Usage: {} &lt;shodan-data.json.gz&gt;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># GIFs are stored in the local &quot;data&quot; directory</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"s1\">&#39;data&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We need to connect to the API to lookup the historical host information</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">shodan</span><span class=\"o\">.</span><span class=\"n\">Shodan</span><span class=\"p\">(</span><span class=\"n\">API_KEY</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the shodan.helpers.iterate_files() method to loop over the Shodan data file</span>\n<span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">iterate_files</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n        <span class=\"c1\"># Get the historic info</span>\n        <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">host</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">&#39;ip_str&#39;</span><span class=\"p\">],</span> <span class=\"n\">history</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Count how many screenshots this host has</span>\n        <span class=\"n\">screenshots</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">banner</span> <span class=\"ow\">in</span> <span class=\"n\">host</span><span class=\"p\">[</span><span class=\"s1\">&#39;data&#39;</span><span class=\"p\">]:</span>\n                <span class=\"c1\"># Extract the image from the banner data</span>\n                <span class=\"k\">if</span> <span class=\"s1\">&#39;opts&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">banner</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;screenshot&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">banner</span><span class=\"p\">[</span><span class=\"s1\">&#39;opts&#39;</span><span class=\"p\">]:</span>\n                        <span class=\"c1\"># Sort the images by the time they were collected so the GIF will loop</span>\n                        <span class=\"c1\"># based on the local time regardless of which day the banner was taken.</span>\n                        <span class=\"n\">timestamp</span> <span class=\"o\">=</span> <span class=\"n\">arrow</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">banner</span><span class=\"p\">[</span><span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n                        <span class=\"n\">sort_key</span> <span class=\"o\">=</span> <span class=\"n\">timestamp</span><span class=\"o\">.</span><span class=\"n\">hour</span>\n                        <span class=\"n\">screenshots</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span>\n                                <span class=\"n\">sort_key</span><span class=\"p\">,</span>\n                                <span class=\"n\">banner</span><span class=\"p\">[</span><span class=\"s1\">&#39;opts&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;screenshot&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;data&#39;</span><span class=\"p\">]</span>\n                        <span class=\"p\">))</span>\n\n                        <span class=\"c1\"># Ignore any further screenshots if we already have MAX_SCREENS number of images</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">screenshots</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"n\">MAX_SCREENS</span><span class=\"p\">:</span>\n                                <span class=\"k\">break</span>\n\n        <span class=\"c1\"># Extract the screenshots and turn them into a GIF if we&#39;ve got the necessary</span>\n        <span class=\"c1\"># amount of images.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">screenshots</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"n\">MIN_SCREENS</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">screenshot</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">screenshots</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)):</span>\n                        <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;/tmp/gif-image-{}.jpg&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">screenshot</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;base64&#39;</span><span class=\"p\">))</span>\n\n                <span class=\"c1\"># Create the actual GIF using the  ImageMagick &quot;convert&quot; command</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s1\">&#39;convert -layers OptimizePlus -delay 5x10 /tmp/gif-image-*.jpg -loop 0 +dither -colors 256 -depth 8 data/{}.gif&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">&#39;ip_str&#39;</span><span class=\"p\">]))</span>\n\n                <span class=\"c1\"># Clean up the temporary files</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s1\">&#39;rm -f /tmp/gif-image-*.jpg&#39;</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># Show a progress indicator</span>\n                <span class=\"k\">print</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">&#39;ip_str&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The full code is also available on GitHub: <a class=\"reference external\" href=\"https://gist.github.com/achillean/963eea552233d9550101\">https://gist.github.com/achillean/963eea552233d9550101</a></p>\n</div>\n", "alabaster_version": "0.7.10", "display_toc": false, "title": "GIF Creator", "sourcename": "examples/gifcreator.rst.txt", "customsidebar": null, "metatags": "", "current_page_name": "examples/gifcreator", "next": {"link": "../../api/", "title": "shodan"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["api", "shodan", "N", "next"], ["examples/cert-stream", "Access SSL certificates in Real-Time", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GIF Creator</a></li>\n</ul>\n", "prev": {"link": "../cert-stream/", "title": "Access SSL certificates in Real-Time"}, "page_source_suffix": ".rst"}